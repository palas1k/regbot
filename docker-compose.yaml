version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - base_network
  redis:
    image: redis:7.0.5-alpine
    env_file: .env
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/var/lib/redis/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - base_network
  migrations:
     build: .
     env_file: .env
     command: poetry run python manage.py migrate
     networks:
       - base_network
     depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
  web:
     build: .
     env_file:
       - .env
       - ./deploy/gunicorn/gunicorn.env
     environment:
       - BOT_MAIN=True
     ports:
       - "8000:8000"
     command: poetry run uvicorn config.asgi --port 8000
     networks:
       - base_network

  celery:
      build: .
      command: poetry run celery -A config worker -l INFO -E
      env_file: .env
      volumes:
        - ./regbot:/regbot:ro
        - ./config:/config:ro
        - ./manage.py:/manage.py:ro
        - ./locale:/locale:ro
      depends_on:
        web:
          condition: service_started
      networks:
        - base_network

  celery-beat:
      build: .
      command: celery -A config beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
      env_file: .env
      volumes:
        - ./regbot:/regbot:ro
        - ./config:/config:ro
        - ./manage.py:/manage.py:ro
        - ./locale:/locale:ro
      depends_on:
        web:
          condition: service_started
      networks:
        - base_network

  celery-flower:
      image: mher/flower:0.9.7
      command: [ 'flower', '--broker=redis://redis:6379', '--port=80' ]
      ports:
        - "5555:80"
      depends_on:
        web:
          condition: service_started
      networks:
        - base_network
networks:
  base_network:
